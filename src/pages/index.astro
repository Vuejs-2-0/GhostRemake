---
// import TopNavbar from "../components/TopNavbar.vue";
import ProductList from "@/components/ProductList.astro";
// import Main from "../components/Main.vue";
// import MainText from "../components/MainText.astro";
// import Navbar from "../components/Navbar.vue";
import Bracelet from "../components/Bracelet/Bracelet.vue";
// import About from "../components/About.vue";
// // import Footer from "../components/Footer.astro";
// import Footer from "@/components/Footer.astro";
// import CartStore from "@/components/Product/CartStore.vue";
// // import SignUp from "@/components/SignUp2.vue";
import "../styles/globals.css";
import { Button } from "@/components/ui/button";
import CartFooterVue from "@/components/CartFooter.vue"
import Layout from "@/layouts/Layout.astro";
import Questionnaire from "@/components/Questionnaire/Questionnaire.vue";

// import { getProducts } from "../lib/tarpit_gql";
import { ref } from "vue";
import { getBookProducts } from "../lib/tarpit_gql";


const products = await getBookProducts();

import { getFormById } from "@/lib/tarpit_gql"
let form = await getFormById(4)
let form2 = await getFormById(5)

let info = [1,1,1]
const { cart, user } = Astro.locals as { cart: any, user: any };

const { session } = Astro.locals as unknown as { session: any };

// Below is Signup for Astro
import { signUp, signOut, login } from "../lib/tarpit_gql";
// import { UserCheck } from "lucide-vue-next";

const userExist = ref(false);
if (session && session.user_id && session.user_id.startsWith("guest")) {
  userExist.value = false;
} else if (session && session.user_id) {
  userExist.value = true;
}

if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();

    const operation = String(data.get("operation"));

    if (operation == "logout") {
      await signOut(user?.email);

      Astro.cookies.delete("auth_session");
      return Astro.redirect("/");
    }

    if (operation === "signup") {
      const email = String(data.get("email"));
      const password = String(data.get("password"));

      // Do something with the data
      const encoder = new TextEncoder();
      const encoded_data = encoder.encode(String(password));

      let password_signature = await crypto.subtle.digest(
        "SHA-256",
        encoded_data
      );
      const hashArray = Array.from(new Uint8Array(password_signature)); // convert buffer to byte array
      const hashHex = hashArray
        .map((b) => b.toString(16).padStart(2, "0"))
        .join(""); // convert bytes to hex string

      let result = await signUp(email, hashHex);

      if (result) {
        const { user, session, cookie } = result;

        console.log(user, session, cookie);

        Astro.cookies.set(cookie.name, cookie.value, cookie.attributes);

        return Astro.redirect("/");
      }
    }

    if (operation == "login") {
      const email = String(data.get("email"));
      const password = String(data.get("password"));

      // Do something with the data
      const encoder = new TextEncoder();
      const encoded_data = encoder.encode(String(password));

      let password_signature = await crypto.subtle.digest(
        "SHA-256",
        encoded_data
      );
      const hashArray = Array.from(new Uint8Array(password_signature)); // convert buffer to byte array
      const hashHex = hashArray
        .map((b) => b.toString(16).padStart(2, "0"))
        .join(""); // convert bytes to hex string
      console.log(email, hashHex);

      let result = await login(email, hashHex);

      if (result) {
        const { user, session, cookie } = result;

        console.log(user, session, cookie);

        Astro.cookies.set(cookie.name, cookie.value, cookie.attributes);

        return Astro.redirect("/");
      } else {
        console.error("Login failed: No result returned");
      }
    }
  } catch (error) {
    if (error instanceof Error) {
      console.error("Error in POST operation:", error.message);
    }
  }
}
---

<Layout>


  <main class="w-full" transition:animate="slide">
    
    <CartFooterVue client:only="vue" form={form} products={products} userExist={userExist.value} email={user.email} userId={user.id} userMetadata={user?.metadata} localCart={cart}/>
      <!-- <CartStore client:only="vue" user_cart={cart} /> -->
      <!-- {JSON.stringify(cart)} -->
      <section class="mb-12 w-full">

        <div class="w-full flex justify-center items-center">
          <p class="w-[60%] sm:w-full text-lg text-salmon-300 text-center">揭开神秘的灵异世界，有趣的鬼故事集就在《真的友鬼》</p>
        </div>
  
        <div class="w-full flex justify-center items-center mt-4 space-x-4">
          <Button class="p-2 px-4 bg-salmon-100 min-h-0 h-auto rounded-full text-salmon-500 space-x-2 pl-3 hover:bg-salmon-500 hover:text-white scale-100 active:scale-95">
            <iconify-icon class="text-lg" icon="ic:baseline-facebook"></iconify-icon>
            <span>专页</span>
          </Button>
  
          <Button class="p-2 px-4 bg-salmon-100 min-h-0 h-auto rounded-full text-salmon-500 space-x-2 pl-3 hover:bg-salmon-500 hover:text-white scale-100 active:scale-95">
            <iconify-icon class="text-lg" icon="ri:messenger-fill"></iconify-icon>
            <span>私讯</span>
          </Button>
        </div>
      </section>

  
      <section class="w-full flex flex-col justify-center items-center">
        <ProductList products={products} />
      </section>
  
      <hr class="my-8 border-salmon/10">
  
      <section class="w-full flex flex-col justify-center items-center">

      <div class="w-full max-w-sm">

        <h2 class="text-2xl font-semibold text-center mb-4">五色绳</h2>

        <div class="w-full bg-white rounded-xl p-4">
          
          <div class="w-full bg-gray-100/50 aspect-video rounded-md mb-2">
            <img src="img/horizontal.webp" alt="Bracelet"  class="w-full max-w-[600px] h-auto max-h-[300px] bg-gray-300 rounded-[8px] object-cover">
          </div>

          <p class="py-4">弟者消聽泉筆後造想！爸東早汗丟？苦都抱地娘現海玉采言波法重他校具員蛋。活帶着麻但語卜，歡豆姊世者良目：村每壯喜陽個星，玩寫這斥哭何。</p>
          
          <!-- Pass cart as props to Bracelet -->
          <Bracelet client:only="vue" cart={cart} json_schema={form2.schema.definitions.zodSchema} field_config={form2.metadata.field_config}>
            <Button class="w-full p-2.5 px-5 bg-salmon-500 rounded-xl min-h-0 h-auto text-white space-x-2 hover:bg-salmon-100 hover:text-salmon-500 pl-3 text-xl">
              <iconify-icon class="text-2xl" icon="material-symbols:add"></iconify-icon>
              <span>订制五色绳</span>
            </Button>
          </Bracelet>
  
          </div>
  
        </div>
        <div class="w-full max-w-sm mt-4">

          <h2 class="text-2xl font-semibold text-center mb-4">问题</h2>

        <div class="w-full bg-white rounded-xl p-4">
          
          <div class="w-full bg-gray-100/50 aspect-video rounded-md mb-2">
            <img src="img/ghostFriend4.jpeg" alt="Bracelet"  class="w-full max-w-[600px] h-auto max-h-[250px] bg-gray-300 rounded-[8px] object-cover">
          </div>

          <p class="py-4">弟者消聽泉筆後造想！爸東早汗丟？苦都抱地娘現海玉采言波法重他校具員蛋。活帶着麻但語卜，歡豆姊世者良目：村每壯喜陽個星，玩寫這斥哭何。</p>

          <Questionnaire client:only="vue" cart={cart} >
            <Button class="w-full p-2.5 px-5 bg-salmon-500 rounded-xl min-h-0 h-auto text-white space-x-2 hover:bg-salmon-100 hover:text-salmon-500 pl-3 text-xl">
              <iconify-icon class="text-2xl" icon="material-symbols:add"></iconify-icon>
              <span>添加问答</span>
            </Button>
          </Questionnaire>
  
          </div>
  
        </div>
      </div>
  
  
      </section>
  
      <hr class="my-8 border-salmon/10">
  
  
      <section class="w-full flex justify-center items-center ">
  
        <div class="w-full max-w-sm flex justify-center items-center flex-col space-y-8">
  
          {
            info.map( () => 
            <div class="px-8 w-full">
            <div class="w-full aspect-square bg-white shadow-md rounded-xl">
            </div>
          </div>
          )
          }
  
        </div>
  
      </section>
  
  
      <section class="w-full flex justify-center items-center pt-12 pb-[10vh]" >
        <p>© 真的友鬼 2024</p>
      </section>

  </main>


</Layout>

<!-- <html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>真的友鬼</title>
  </head>
  <body class="bg-salmon-50" data-barba="wrapper">


    

  </body>
</html> -->