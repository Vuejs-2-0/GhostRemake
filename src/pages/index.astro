---
import TopNavbar from '../components/TopNavbar.vue';
import ProductList from '@/components/ProductList.astro';
import Main from '../components/Main.vue'
import MainText from '../components/MainText.astro'
import Navbar from '../components/Navbar.vue'
import Bracelet from '../components/Bracelet.vue'
import About from '../components/About.vue'
import Footer from '../components/Footer.vue'
import CartStore from '@/components/Product/CartStore.vue';
import '../styles/globals.css'

import { getProducts } from '../lib/tarpit_gql'

const products = await getProducts()

const { cart } = Astro.locals

let user = null;
let transactions = null;

// Below is Signup for Astro
import { signUp, signOut, getUserData, login} from '../lib/tarpit_gql'

if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    
    const operation = String(data.get("operation"));
    
    if(operation == "logout") {

      await signOut(Astro.locals?.user?.email)
      
      Astro.cookies.delete("auth_session")
      return Astro.redirect('/')
    }
    
    if(operation === "signup"){

      const email = String(data.get("email"))
      const password = String(data.get("password"));

      // Do something with the data
      const encoder = new TextEncoder();
      const encoded_data = encoder.encode(String(password));

      let password_signature = await crypto.subtle.digest("SHA-256", encoded_data)
      const hashArray = Array.from(new Uint8Array(password_signature)); // convert buffer to byte array
      const hashHex = hashArray.map((b) => b.toString(16).padStart(2, "0")).join(""); // convert bytes to hex string

      let result = await signUp(email,hashHex);

      if(result) {
        const { user,session,cookie} = result
        
        console.log(user,session,cookie)
  
        Astro.cookies.set(cookie.name, cookie.value, cookie.attributes)

        return Astro.redirect('/')

      }

    }

    if(operation == "login") {

      const email = String(data.get("email"))
      const password = String(data.get("password"));

      // Do something with the data
      const encoder = new TextEncoder();
      const encoded_data = encoder.encode(String(password));

      let password_signature = await crypto.subtle.digest("SHA-256", encoded_data)
      const hashArray = Array.from(new Uint8Array(password_signature)); // convert buffer to byte array
      const hashHex = hashArray.map((b) => b.toString(16).padStart(2, "0")).join(""); // convert bytes to hex string
      console.log(email, hashHex);

      let result = await login(email,hashHex);
      
      if(result) {
        const { user,session,cookie} = result
        
        console.log(user,session,cookie)
  
        Astro.cookies.set(cookie.name, cookie.value, cookie.attributes)

        return Astro.redirect('/')

      } else {
        console.error("Login failed: No result returned");
      }
    }

  } catch (error) {
    if (error instanceof Error) {
      console.error("Error in POST operation:", error.message);
    }
  }
}

if (Astro.locals.user) {
  const userData = await getUserData(Astro.locals.user.id);
  user = userData.user;
  transactions = userData.tx;
}
---

<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Ghost Remake</title>
</head>
<body>
  <div class="bg-[#F6EAFF]">
    <div class="container">
      <TopNavbar client:load/>
      <MainText />
      <Main client:visible />
      <CartStore client:only="vue" user_cart={cart} />
    </div>
  </div>
  <div class="sticky top-0 z-20">
    <Navbar client:only="vue" />
  </div>
  <div class="bg-[#FFFFFF]">
    <div class="container">
      <div id="mainSection" class=" border-b border-gray-200">
        {JSON.stringify(cart)}
        <ProductList products={products} />
      </div> 
      <div id="braceletSection" class=" border-b border-gray-200 pb-6 min-h-10 ">
        <Bracelet client:only="vue" />
      </div>
      <div id="aboutSection">
        <About client:visible />  
      </div>
      <div class="pb-[80px] text-center">
        <p>© 真的友鬼 2024</p>
      </div>
    </div> 
    <!-- Accept quantity from ProductList.vue and pass as count to Footer -->
    <Footer client:only="vue" />
  </div>
</body>
</html>